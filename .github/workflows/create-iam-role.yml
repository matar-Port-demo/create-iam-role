name: Create IAM Role

on:
  workflow_dispatch:
    inputs:
      role_name:
        description: 'IAM Role name'
        required: true
      port_context:
        description: 'Port context object (includes runId)'
        required: true

permissions:
  contents: write
  pull-requests: write
  actions: read

env:
  TF_REPO: matar-Port-demo/create-iam-role
  BASE_TF_DIR: resources
  BRANCH_PREFIX: create-iam
  MAIN_BRANCH: main

jobs:
  start:
    runs-on: ubuntu-latest
    outputs:
      port_run_id: ${{ steps.extract_run_id.outputs.PORT_RUN_ID }}
    steps:
      - name: Extract Port Run ID
        id: extract_run_id
        run: |
          PORT_RUN_ID=$(echo '${{ github.event.inputs.port_context }}' | jq -r '.runId')
          echo "PORT_RUN_ID=$PORT_RUN_ID" >> $GITHUB_ENV
          echo "::set-output name=PORT_RUN_ID::$PORT_RUN_ID"

      - name: Log start to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ env.PORT_RUN_ID }}
          logMessage: "üöÄ Starting IAM role creation for `${{ github.event.inputs.role_name }}`"

  create-pr:
    runs-on: ubuntu-latest
    needs: start
    outputs:
      pr_url: ${{ steps.create_pr.outputs.pull-request-url }}
    steps:
      - name: Checkout Terraform Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TF_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Generate Terraform File from Template
        run: |
          ROLE_NAME="${{ github.event.inputs.role_name }}"
          TF_DIR="${{ env.BASE_TF_DIR }}/$ROLE_NAME"
          mkdir -p "$TF_DIR"
          TEMPLATE_PATH=templates/iam-role-static.tf
          TARGET_FILE="$TF_DIR/main.tf"
          sed "s/{{ role_name }}/$ROLE_NAME/g" "$TEMPLATE_PATH" > "$TARGET_FILE"

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GH_PAT }}
          commit-message: "Add IAM role ${{ github.event.inputs.role_name }}"
          branch: ${{ env.BRANCH_PREFIX }}-${{ github.run_id }}
          base: ${{ env.MAIN_BRANCH }}
          title: "Create IAM role ${{ github.event.inputs.role_name }}"
          body: "This PR adds a basic IAM role via Terraform."

      - name: Log PR to Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ needs.start.outputs.port_run_id }}
          logMessage: "üì• Created PR for IAM role"
          link: "[\"${{ steps.create_pr.outputs.pull-request-url }}\"]"

  merge-pr:
    runs-on: ubuntu-latest
    needs: create-pr
    steps:
      - name: Checkout Terraform Repo
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TF_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Merge Pull Request
        run: |
          gh pr merge --admin --squash "${{ needs.create-pr.outputs.pr_url }}"
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}

  apply-terraform:
    runs-on: ubuntu-latest
    needs: merge-pr
    steps:
      - name: Checkout Repo After Merge
        uses: actions/checkout@v3
        with:
          repository: ${{ env.TF_REPO }}
          token: ${{ secrets.GH_PAT }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init & Apply
        run: |
          ROLE_NAME="${{ github.event.inputs.role_name }}"
          TF_DIR="${{ env.BASE_TF_DIR }}/$ROLE_NAME"
          cd "$TF_DIR"
          terraform init
          terraform plan
          terraform apply -auto-approve

      - name: Finalize in Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.PORT_CLIENT_ID }}
          clientSecret: ${{ secrets.PORT_CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH_RUN
          runId: ${{ needs.start.outputs.port_run_id }}
          status: "SUCCESS"
          summary: "‚úÖ IAM role `${{ github.event.inputs.role_name }}` created"
          logMessage: "üåç Terraform applied IAM role"
          link: "[\"${{ needs.create-pr.outputs.pr_url }}\"]"
